plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	//node plugin 추가
	id "com.github.node-gradle.node" version "3.1.0"
	//querydsl gradle plugin 추가
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.irostub'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

//log4j2 version update
ext['log4j2.version'] = '2.15.0'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	gradlePluginPortal()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	//thymeleaf layout
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.5.3'

	//npm gradle 빌드 모듈 추가
	implementation 'com.github.node-gradle:gradle-node-plugin:3.1.0'

	//아키텍쳐- 의존성 구조 테스트
	testImplementation 'com.tngtech.archunit:archunit:0.22.0'

	//querydsl library 추가
	implementation 'com.querydsl:querydsl-jpa'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

//node build 추가 시작
node {
	version = '16.3.0'
	download = true
	nodeModulesDir = file("${projectDir}/src/main/resources/static")

}
task copyFrontLib(type: Copy) {
	from "${projectDir}/src/main/resources/static"
	into "${projectDir}/build/resources/main/static/."
}
copyFrontLib.dependsOn npmInstall
compileJava.dependsOn copyFrontLib
//node build 추가 끝

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
clean{
	delete file("$buildDir/generated")
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
compileQuerydsl.doFirst {
	delete file("$buildDir/generated/querydsl")
}
//querydsl 추가 끝